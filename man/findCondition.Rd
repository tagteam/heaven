% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findConditions.R
\name{findCondition}
\alias{findCondition}
\title{Find conditions in registry data}
\usage{
findCondition(data, vars, keep, conditions, match="contain",variabale.name="variable")
}
\arguments{
\item{data}{Data in which to search for conditions}

\item{vars}{Name(s) of variable(s) in which to search.}

\item{keep}{a character vector of the columns in Data.table to keep in
output}

\item{conditions}{A named list of (vectors of) search strings. See examples.}

\item{match}{A variable to tell how to use the character vectors:
"exact"=exactly matches the search string, "contains"=contains the search
string, "starts"=Starts with the search string, "end"=Ends with the search
string}
}
\value{
A data table that includes the "keep-variables" and a variable "cond" which
identifies the condition searched for
}
\description{
This functions is useful for the very common task of selecting cases based 
on a code which has complete or partial match to a vector of character vari-
ables.

The function is designed to search a group of variables (character) for 
multiple conditions defined in a list of named character vectors. The func-
tion will produce a data.table with selected variables for cases where a
match is found.

See examples for common use of the output
}
\details{
Find conditions

Find conditions
}
\examples{
library(heaven)
library(data.table)
opr <- data.table(
  pnr=1:100,opr=paste0(rep(c('A','B'),50),seq(0,100,10)),
  oprtil=paste0(rep(c('A','C'),50),seq(0,100,10)),
  odto=101:200
)
search <- list(Cond1=c('A1','A2'),Cond2=c('B10','B40','B5'),
Cond3=c('A1','C20','B2'))

out <- findCondition(opr,vars=c("opr","oprtil"),keep=c("pnr","odto"),
conditions=search,match="start",variable.name="cond")
### And how to use the result:
# Find first occurence of each condition and then use "dcast" to create
# a data.table with vectors corresponding to each condition.
test <- out[,list(min=min(odto)),by=c("pnr","cond")]
# provide a list of variables with one value each
test2 <- dcast(pnr~cond,data=test,value.var="min")
test2 # A datatable with first dates of each condition for each pnr, but only 
      # for pnr with at least one condition
# Define a condition as present when before a certain index date
dates <- data.table (pnr=1:100,basedate=sample(0:200,size=100,replace=TRUE))       
test3 <- merge(out,dates,by="pnr")
test3[,before:=as.numeric(odto<=basedate)] # 1 when condition fulfilled
test4 <- dcast(pnr~cond,value.var="before",data=test3)
# Whether to conver NAs to zero depends on application
}
\author{
Christian Torp-Pedersen  <ctp@heart.dk>, Thomas A. Gerds <ta
tag@biostat.ku.dk>
}
